---
- name: HomeLab | Vault Agent | Download vault binary
  ansible.builtin.get_url:
    url: "{{ vault_source_url }}"
    dest: /tmp/vault.zip
    checksum: "{{ vault_source_checksum }}"
    owner: root
    group: root
    mode: '0644'
  register: vault_downloaded

- name: HomeLab | Vault Agent | Extract vault binary
  when: vault_downloaded.changed # noqa: no-handler
  ansible.builtin.unarchive:
    src: /tmp/vault.zip
    dest: /tmp
    owner: root
    group: root
    mode: '0755'
    remote_src: yes
  register: vault_unzipped

- name: HomeLab | Vault Agent | Install vault binary
  when: vault_unzipped.changed # noqa: no-handler
  ansible.builtin.copy:
    src: /tmp/vault
    dest: "/usr/bin/{{ vault_service_name }}"
    owner: root
    group: root
    mode: '0755'
    remote_src: yes

- name: HomeLab | Vault Agent | Create user
  ansible.builtin.user:
    name: "{{ vault_user }}"
    create_home: false
    shell: /bin/false

- name: HomeLab | Vault Agent | Configure service
  ansible.builtin.template:
    src: vault-agent.service
    dest: "/usr/lib/systemd/system/{{ vault_service_name }}.service"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: '0644'
  notify: Restart Vault Agent

- name: HomeLab | Vault Agent | Create env file
  ansible.builtin.copy:
    dest: /etc/vault.d/vault.env
    content: ""
    force: true
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: '0660'
  notify: Restart Vault Agent

# We use blockinfile here so that other services can later add templates to this file
# without them being clobbered every time this role is run.
- name: HomeLab | Vault Agent | Configure vault
  ansible.builtin.blockinfile:
    dest: /etc/vault.d/vault-agent.hcl
    create: true
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: '0660'
    marker: "# {mark} ANSIBLE MANAGED VAULT AGENT CONFIG BLOCK"
    block: |
      vault {
        address = "{{ vault_service_settings.vault_server }}"
      }
      listener "tcp" {
        address = "127.0.0.1:8201"
        tls_disable = true
      }
      auto_auth {
        method "approle" {
          config = {
            role_id_file_path = "/etc/vault.d/role-id"
            secret_id_file_path = "/etc/vault.d/secret-id"
            remove_secret_id_file_after_reading = false
          }
        }
      }
      cache {
        use_auto_auth_token = true
      }
      exit_after_auth = false
      pid_file = "/opt/vault/vault-agent.pid"
  notify: Restart Vault Agent

- name: HomeLab | Vault Agent | Service
  ansible.builtin.service:
    name: "{{ vault_service_name }}"
    state: started
    enabled: yes
